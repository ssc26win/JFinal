package com.shangsc.platform.model;

import com.jfinal.plugin.activerecord.Db;
import com.shangsc.platform.code.YesOrNo;
import com.shangsc.platform.core.view.InvokeResult;
import com.shangsc.platform.model.base.BaseMsgReceiver;
import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang3.StringUtils;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class MsgReceiver extends BaseMsgReceiver<MsgReceiver> {
    public static final MsgReceiver dao = new MsgReceiver();

    public InvokeResult save(Long mid, Long id, List<Long> userIds) {
        if (null != id && id > 0L) {
            MsgReceiver msgReceiver = this.findById(id);
            if (msgReceiver == null) {
                return InvokeResult.failure("更新消息失败, 该消息不存在");
            }
            msgReceiver = setProp(msgReceiver, mid, userIds);
            msgReceiver.update();
        } else {
            MsgReceiver msgReceiver = new MsgReceiver();
            msgReceiver = setProp(msgReceiver, mid, userIds);
            msgReceiver.save();
        }
        return InvokeResult.success();
    }

    public InvokeResult saveList(Long mid, List<Long> userIds) {
        if (null != mid && mid > 0L) {
            Message message = Message.dao.findById(mid);
            List<MsgReceiver> msgReceivers = this.find("select * from t_msg_receiver where msg_id=" + mid);
            if (CollectionUtils.isNotEmpty(msgReceivers)) {
                Db.update("delete from t_msg_receiver where msg_id=" + mid);
            }
        }
        List<MsgReceiver> msgReceiver = setList(mid, userIds);
        saveBatch(msgReceiver, msgReceiver.size());
        return InvokeResult.success();
    }

    private List<MsgReceiver> setList(Long mid, List<Long> userIds) {
        List<MsgReceiver> list = new ArrayList<>();
        List<SysUser> users = SysUser.me.find("select * from sys_user where id in (" + StringUtils.join(userIds, ",") + ")");
        for (SysUser usr : users) {
            MsgReceiver msgReceiver = new MsgReceiver();
            msgReceiver.setStatus(0);
            msgReceiver.setMsgId(mid);
            msgReceiver.setReceiverId(Long.parseLong(usr.getId() + ""));
            msgReceiver.setReceiverName(usr.getName());
            msgReceiver.setCreateTime(new Date());
            msgReceiver.setUpdateTime(new Date());
        }
        return list;
    }

    private MsgReceiver setProp(MsgReceiver msgReceiver, Long mid, List<Long> userIds) {
        msgReceiver.setStatus(0);
        msgReceiver.setReceiverId(0L);
        msgReceiver.setCreateTime(new Date());
        return msgReceiver;
    }

    /**
     * CREATE TABLE `t_msg_receiver` (
     * `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
     * `msg_id` bigint(20) NOT NULL COMMENT '消息id',
     * `status` tinyint(4) DEFAULT '0' COMMENT '状态: 0 未读 1 已读',
     * `memo` varchar(500) DEFAULT NULL COMMENT '备注',
     * `receiver_id` bigint(20) DEFAULT NULL COMMENT '接收人Id',
     * `receiver_name` varchar(50) DEFAULT NULL COMMENT '接收人姓名',
     * `create_time` datetime DEFAULT NULL COMMENT '创建时间',
     * `update_time` datetime DEFAULT NULL COMMENT '更新时间',
     * PRIMARY KEY (`id`)
     * ) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='消息接收者表';
     *
     * @param modelOrRecordList
     * @param batchSize
     * @return
     */
    public static int[] saveBatch(List<MsgReceiver> modelOrRecordList, int batchSize) {
        String sql = "insert into t_msg_receiver(msg_id,status,memo,receiver_id,receiver_name,create_time,update_time" +
                ") values (?,?,?,?,?,?,?)";
        String columns = "msg_id,status,memo,receiver_id,receiver_name,create_time,update_time";
        int[] result = Db.batch(sql, columns, modelOrRecordList, batchSize);
        return result;
    }
}
