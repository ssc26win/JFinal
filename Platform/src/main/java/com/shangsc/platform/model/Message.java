package com.shangsc.platform.model;

import com.jfinal.plugin.activerecord.Db;
import com.shangsc.platform.code.YesOrNo;
import com.shangsc.platform.core.util.CommonUtils;
import com.shangsc.platform.core.view.InvokeResult;
import com.shangsc.platform.model.base.BaseMessage;

import java.util.Date;
import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Message extends BaseMessage<Message> {
    public static final Message dao = new Message();

    public InvokeResult save(Long id, String title, String content, String imgUrl, Integer status, String userName, List<Long> userIds) {
        if (null != id && id > 0L) {
            Message message = this.findById(id);
            if (message == null) {
                return InvokeResult.failure("更新消息失败, 该消息不存在");
            }
            message = setProp(message, title, content, imgUrl, status, userName, userIds);
            if (YesOrNo.isYes(String.valueOf(status))) {
                offPublishOther();
            }
            message.update();
        } else {
            Message message = new Message();
            message = setProp(message, title, content, imgUrl, status, userName, userIds);
            if (YesOrNo.isYes(String.valueOf(status))) {
                offPublishOther();
            }
            message.save();
        }
        return com.shangsc.platform.core.view.InvokeResult.success();
    }

    private void offPublishOther() {
        Db.update("update t_ad set status=0 where 1=1");
    }

    private Message setProp(Message message, String title, String content, String imgUrl, Integer status, String userName, List<Long> userIds) {
        message.setTitle(title);
        message.setContent(content);
        message.setImgUrl(imgUrl);
        message.setStatus(status);
        message.setCreateUser(userName);
        message.setCreateTime(new Date());
        return message;
    }

    public InvokeResult deleteData(String idStrs) {
        List<Long> ids = CommonUtils.getLongListByStrs(idStrs);
        for (int i = 0; i < ids.size(); i++) {
            this.deleteById(ids.get(i));
        }
        return InvokeResult.success();
    }

    public InvokeResult publish(Long id) {
        Message message = this.findById(id);
        if (message == null) {
            return InvokeResult.failure("更新广告失败, 该广告不存在");
        }
        message.setStatus(1);
        offPublishOther();
        message.update();
        return InvokeResult.success();
    }

}
