package com.shangsc.platform.model;

import com.jfinal.plugin.activerecord.Page;
import com.shangsc.platform.core.view.InvokeResult;
import com.shangsc.platform.model.base.BaseActualData;
import org.apache.commons.lang3.StringUtils;

import java.math.BigDecimal;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class ActualData extends BaseActualData<ActualData> {

	public static final ActualData me = new ActualData();

	public InvokeResult save(Long id, Long companyId, String innerCode, String lineNum, String meterNum,
							 Integer watersType, String alarm, BigDecimal netWater, Integer state, String voltage) {
		if (null != id && id > 0l) {
			ActualData actualData = this.findById(id);
			if (actualData == null) {
				return InvokeResult.failure("更新失败, 该记录不存在");
			}
			actualData = setProp(actualData, companyId, innerCode, lineNum, meterNum, watersType, alarm, netWater, state, voltage);
			actualData.update();
		} else {
			ActualData actualData = new ActualData();
			actualData = setProp(actualData, companyId, innerCode, lineNum, meterNum, watersType, alarm, netWater, state, voltage);
			actualData.save();
		}
		return InvokeResult.success();
	}

	private ActualData setProp(ActualData actualData, Long companyId, String innerCode, String lineNum, String meterNum,
							   Integer watersType, String alarm, BigDecimal netWater, Integer state, String voltage) {
		actualData.setCompanyId(companyId);
		actualData.setInnerCode(innerCode);
		actualData.setLineNum(lineNum);
		actualData.setMeterNum(meterNum);
		actualData.setWatersType(watersType);
		actualData.setAlarm(alarm);
		actualData.setNetWater(netWater);
		actualData.setState(state);
		actualData.setVoltage(voltage);
		return actualData;
	}

	public InvokeResult deleteData(Long id) {
		this.deleteById(id);
		return InvokeResult.success();
	}

	public Page<ActualData> getActualDataPage(int page, int rows, String keyword, String orderbyStr) {
		String select = "select tad.*,(select tc.name from t_company tc where tc.inner_code=tad.inner_code) as companyName ";
		StringBuffer sqlExceptSelect = new StringBuffer(" from t_actual_data tad ");
		sqlExceptSelect.append(" where 1=1 ");
		if (StringUtils.isNotEmpty(keyword)) {
			sqlExceptSelect.append(" and (tad.inner_code=" + keyword + " or tad.meter_num=" + keyword + ") ");
		}
		if (StringUtils.isNotEmpty(orderbyStr)) {
			sqlExceptSelect.append(orderbyStr);
		}
		this.paginate(page, rows, select, sqlExceptSelect.toString());
		return this.paginate(page, rows, select, sqlExceptSelect.toString());
	}
}
